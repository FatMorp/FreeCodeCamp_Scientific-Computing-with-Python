def arithmetic_arranger(problems, show_answers=False):

    top_row = []
    bottom_row = []
    dash = []
    answer = []

    #Raise error if more than 5 problems
    if len(problems) > 5:
        return 'Error: Too many problems.'
    else:
        if show_answers:

            #Extract each item in list
            for sym in problems:
                
                #Extract each digit and equation
                part = sym.split(" ")
                num1 = part[0]
                op = part[1]
                num2 = part[2]

                #raise error if number is not number
                if not num1.isdigit() or not num2.isdigit():
                    return 'Error: Numbers must only contain digits.'

                if not op == '+' and not op == '-':
                    return "Error: Operator must be '+' or '-'."

                if len(num1) > 4 or len(num2) > 4:
                    return 'Error: Numbers cannot be more than four digits.'

                #Length of each equation
                max_length = 2 + max(len(num1), len(num2))
                
                #Show first line
                top = num1.rjust(max_length)

                #Check location of equation
                if len(num1) > len(num2):
                    bottom = op + ' '*((len(num1) - len(num2))+1) + num2
                else:
                    bottom = op + ' ' + num2
                
                strips = '-'*max_length

                #showing answer
                if op == '+':
                    show_answer = int(num1) + int(num2)
                elif op == '-':
                    show_answer = int(num1) - int(num2)

                fin_show_answer = str(show_answer).rjust(max_length)

                #display each row
                top_row.append(top)
                bottom_row.append(bottom)
                dash.append(strips)
                answer.append(fin_show_answer)

            above = '    '.join(top_row)
            below = '    '.join(bottom_row)
            stripe = '    '.join(dash)
            answer = '    '.join(answer)

            problems = above + '\n' + below + '\n' + stripe + '\n' + answer

        else:
            #Extract each item in list
            for sym in problems:
                
                #Extract each digit and equation
                part = sym.split(" ")
                num1 = part[0]
                op = part[1]
                num2 = part[2]

                #raise error if number is not number
                if not num1.isdigit() or not num2.isdigit():
                    return 'Error: Numbers must only contain digits.'

                if not op == '+' and not op == '-':
                    return "Error: Operator must be '+' or '-'."

                if len(num1) > 4 or len(num2) > 4:
                    return'Error: Numbers cannot be more than four digits.'

                #Length of each equation
                max_length = 2 + max(len(num1), len(num2))
                
                #Show first line
                top = num1.rjust(max_length)

                #Check location of equation
                if len(num1) > len(num2):
                    bottom = op + ' '*((len(num1) - len(num2))+1) + num2
                else:
                    bottom = op + ' ' + num2
                
                strips = '-'*max_length

                #display each row
                top_row.append(top)
                bottom_row.append(bottom)
                dash.append(strips)

            above = '    '.join(top_row)
            below = '    '.join(bottom_row)
            stripe = '    '.join(dash)

            problems = above + '\n' + below + '\n' + stripe
        
    return problems

print(f'\n{arithmetic_arranger(["32 + 698", "3801 - 2", "45 + 43", "123 + 49"])}')
